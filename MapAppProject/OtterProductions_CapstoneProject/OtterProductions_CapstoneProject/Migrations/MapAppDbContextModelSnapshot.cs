// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OtterProductions_CapstoneProject.Areas.Identity.Data;
using OtterProductions_CapstoneProject.Data;

#nullable disable

namespace OtterProductionsCapstoneProject.Migrations
{
    [DbContext(typeof(AuthenticationDbContext))]
    partial class MapAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OtterProductions_CapstoneProject.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EventLocation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EventTypeID");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("OrganizationID");

                    b.HasKey("Id")
                        .HasName("PK__Event__3214EC2726B95BDA");

                    b.HasIndex(new[] { "OrganizationId" }, "IX_Event_OrganizationID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("OtterProductions_CapstoneProject.Models.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EventType1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EventType");

                    b.HasKey("Id")
                        .HasName("PK__EventTyp__3214EC27C715A1DA");

                    b.ToTable("EventType");
                });

            modelBuilder.Entity("OtterProductions_CapstoneProject.Models.MapAppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AspnetIdentityId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__MapAppUs__3214EC27085551E5");

                    b.ToTable("MapAppUser");
                });

            modelBuilder.Entity("OtterProductions_CapstoneProject.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AspnetIdentityId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrganizationDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrganizationLocation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Organzat__3214EC27E4991DB4");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("OtterProductions_CapstoneProject.Models.UserEventList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    b.Property<int>("MapAppUserId")
                        .HasColumnType("int")
                        .HasColumnName("MapAppUserID");

                    b.HasKey("Id")
                        .HasName("PK__UserEven__3214EC27DEE07ADF");

                    b.HasIndex(new[] { "EventId" }, "IX_UserEventList_EventID");

                    b.HasIndex(new[] { "MapAppUserId" }, "IX_UserEventList_MapAppUserID");

                    b.ToTable("UserEventList");
                });

            modelBuilder.Entity("OtterProductions_CapstoneProject.Models.Event", b =>
                {
                    b.HasOne("OtterProductions_CapstoneProject.Models.EventType", "Organization")
                        .WithMany("Events")
                        .HasForeignKey("OrganizationId")
                        .IsRequired()
                        .HasConstraintName("Fk EventType ID");

                    b.HasOne("OtterProductions_CapstoneProject.Models.Organization", "OrganizationNavigation")
                        .WithMany("Events")
                        .HasForeignKey("OrganizationId")
                        .IsRequired()
                        .HasConstraintName("Fk Organzation ID");

                    b.Navigation("Organization");

                    b.Navigation("OrganizationNavigation");
                });

            modelBuilder.Entity("OtterProductions_CapstoneProject.Models.UserEventList", b =>
                {
                    b.HasOne("OtterProductions_CapstoneProject.Models.Event", "Event")
                        .WithMany("UserEventLists")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("Fk Event ID");

                    b.HasOne("OtterProductions_CapstoneProject.Models.MapAppUser", "MapAppUser")
                        .WithMany("UserEventLists")
                        .HasForeignKey("MapAppUserId")
                        .IsRequired()
                        .HasConstraintName("Fk MapAppUser ID");

                    b.Navigation("Event");

                    b.Navigation("MapAppUser");
                });

            modelBuilder.Entity("OtterProductions_CapstoneProject.Models.Event", b =>
                {
                    b.Navigation("UserEventLists");
                });

            modelBuilder.Entity("OtterProductions_CapstoneProject.Models.EventType", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("OtterProductions_CapstoneProject.Models.MapAppUser", b =>
                {
                    b.Navigation("UserEventLists");
                });

            modelBuilder.Entity("OtterProductions_CapstoneProject.Models.Organization", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
